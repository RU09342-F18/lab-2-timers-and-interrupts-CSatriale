#include <msp430.h> 
#include <timerConvert.h>

void main(void)
{
 WDTCTL = WDTPW + WDTHOLD;     // Stop WDT
 TA0CTL = TASSEL_2 + MC_1 + ID_3;  //sets the parameters for timer a0
 TA1CTL = TASSEL_2 + MC_1 + ID_3; //sets the parameters for timer a1
 TA0CCTL0 = CCIE; // CCR0 interrupt enabled for timer a0
 TA1CCTL0 = CCIE; // CCR0 interrupt enabled for timer a1

 // SMCLK/8, upmode
 TA1CCR0 = timerConvert(1, 8);  //sets the frequency for timer a1
 TA0CCR0 = timerConvert(5, 8); //sets the frequency for timer a0


 P1OUT &= 0x00;               // Shut down everything
 P1DIR &= 0x00;
 P1DIR |= BIT0 + BIT6;            // P1.0 and P1.6 pins output the rest are input
 _BIS_SR(CPUOFF + GIE);          // Enter LPM0 w/ interrupt
}

// Timer A0 interrupt service routine
#pragma vector=TIMER0_A0_VECTOR
__interrupt void Timer_A (void)
{
  P1OUT ^= BIT0;                          // Toggles P1.0
}
// Port 1 interrupt service routine
#pragma vector=TIMER1_A0_VECTOR
__interrupt void Timer_A1 (void)
{
  P1OUT ^= BIT6;                      // Toggles P1.6
}

